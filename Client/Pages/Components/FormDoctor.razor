@* Estilos particulares para el navbar *@
<style type="text/css">
   .bg-prima {
      background-color: #b9e6eb !important
   }

   .bg-h2m {
      background-color: #b9e6c1 !important
   }
</style>

<nav class="navbar navbar-expand-sm navbar-h2m bg-prima mb-3">
   <div class="container">
      <a class="navbar-brand" href="#">E P S - Creación Médico</a>
   </div>
</nav>

<div class="row justify-content-center align-items-center">
   <div class="jumbotron col-8">
      <EditForm Model="Doctor" OnValidSubmit="OnValidSubmit">
         <DataAnnotationsValidator></DataAnnotationsValidator>

         <div class="form-group ml-4 mb-2 col-11">
            <p class="mb-0"><strong>Nombres y Apellidos</strong></p>
            <InputText class="form-control" @bind-Value="@Doctor.Name" placeholder="Ingresar Nombres y Apellidos">
            </InputText>
            <ValidationMessage For="@(()=>Doctor.Name)"></ValidationMessage>

         </div>
         <div class="row">
            @*<div class="ml-5 mb-2 col-5">
               <p class="mb-0"><strong>Tipo Documento</strong></p>
               <InputSelect Id="ListDocument" @bind-Value="@Doctor.DocumentType" class="btn btn-light form-group">
               @foreach (var listdocumenttype in ListDocument){
               <option value="@listdocumenttype.NameTypeDocument"> @listdocumenttype.NameTypeDocument</option>
               }
               </InputSelect>
               </div>*@

            <div class="form-group ml-5 mb-2 col-5">
               <p class="mb-0"><strong>Tipo Documento</strong></p>
               <select class="form-control" name="select" @bind="@Doctor.DocumentType">
                  <option value="0" selected>Seleccione una Opción</option>
                  <option value="1">Cédula de Ciudadanía</option>
                  <option value="2">Cédula de Extranjería</option>
                  <option value="3">Pasaporte</option>

               </select>
            </div>
            <div class="form-group ml-1 mb-2 col-5">
               <p class="mb-0"><strong>Número de Documento</strong></p>
               <input type="text" class="form-control" placeholder="Ingresar Número de Documento" @bind="@Doctor.Document" />
            </div>
         </div>

         <div class="row">
            <div class="form-group ml-5 mb-2 col-5">
               <p class="mb-0"><strong>Genero</strong></p>
               <select class="form-control" name="select" @bind="@Doctor.Gender">
                  <option value="0" selected>Selecciona Genero</option>
                  <option value="1">Femenino</option>
                  <option value="2">Masculino</option>
               </select>
            </div>
            <div class="form-group ml-1 mb-2 col-5">
               <p class="mb-0"><strong>Número de Contacto</strong></p>
               <input type="text" class="form-control" id="patient_name" placeholder="Ingresar Número de Contacto" @bind="@Doctor.Phone"/>
            </div>
         </div>

         <div class="row">
            <div class="form-group ml-5 mb-2 col-5">
               <p class="mb-0"><strong>Especialidad</strong></p>
               <select class="form-control" name="selected" @bind="Doctor.Speciality">
                  <option value="0" selected>Selecciona una Opción</option>
                  <option value="1">Especialidad Médica 1</option>
                  <option value="2">Especialidad Médica 2</option>
                  <option value="3">Especialidad Médica 3</option>
                  <option value="4">Especialidad Médica 4</option>
               </select>
            </div>
            <div class="form-group ml-5 mt-4 mb-3">
               <input type="checkbox" class="form-check-input" id="estado" @bind="Doctor.Status" >
               <label class="form-check-label" for="estado">Activo</label>
            </div>
         </div>

         <div class="form-group"></div>

         <button class="btn btn-success mt-4 mb-2 ml-5">Guardar</button>

      </EditForm>

   </div>
</div>

@code {



   public class ListDocumentType
   {
      public int IdListDocument { get; set; }
      public string NameTypeDocument { get; set; }
   }



   string imageURL;

   [Parameter] public Doctor Doctor { get; set; }
   [Parameter] public EventCallback OnValidSubmit { get; set; }

   protected override void OnInitialized()
   {
      if (!string.IsNullOrEmpty(Doctor.Photo))
      {
         imageURL = Doctor.Photo;
         Doctor.Photo = null;
      }
   }

   private void ImageSelected(string imageB64)
   {
      Doctor.Photo = imageB64;
      imageURL = null;
   }

   public List<ListDocumentType> ListDocument = new List<ListDocumentType>();

   protected override Task OnInitializedAsync()
   {
      ListDocumentType cero = new ListDocumentType();
      cero.IdListDocument = 0;
      cero.NameTypeDocument = "Seleccione una Opción";
      ListDocumentType uno = new ListDocumentType();
      uno.IdListDocument = 1;
      uno.NameTypeDocument = "Cédula de Ciudadanía";
      ListDocumentType dos = new ListDocumentType();
      dos.IdListDocument = 2;
      dos.NameTypeDocument = "Cédula de ExtranjNría";
      ListDocumentType tres = new ListDocumentType();
      tres.IdListDocument = 3;
      tres.NameTypeDocument = "Pasaporte";

      ListDocument.Add(cero);
      ListDocument.Add(uno);
      ListDocument.Add(dos);
      ListDocument.Add(tres);

      return base.OnInitializedAsync();
   }

}